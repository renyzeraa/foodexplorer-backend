{
  "openapi": "3.0.0",
  "info": {
    "title": "FoodExplorer Backend Documentation",
    "description": "This is the complete documentation of FoodExplorer routes",
    "version": "0.1.9",
    "contact": {
      "email": "murilomuller@protonmail.com"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Create a new user with the provided information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid request. Invalid input data"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user",
        "description": "Update the details of the logged-in user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid request. Invalid input data"
          },
          "401": {
            "description": "Unauthorized. User must be logged in"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{email}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by email",
        "description": "Retrieve a user by email address",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "User's email address",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["Sessions"],
        "summary": "User login",
        "description": "Authenticate a user and generate an access token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "AnakynSkywalker@republicagalactica.com",
                    "description": "User's email"
                  },
                  "password": {
                    "type": "string",
                    "example": "Code66",
                    "description": "User's password"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/plates": {
      "post": {
        "tags": ["Plates"],
        "summary": "Create a new plate",
        "description": "Create a new plate with the provided information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the plate"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the plate"
                  },
                  "value": {
                    "type": "number",
                    "description": "The value of the plate"
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The ingredients of the plate",
                    "collectionFormat": "multi"
                  },
                  "categories": {
                    "type": "string",
                    "description": "The categories of the plate"
                  },
                  "picture": {
                    "type": "string",
                    "format": "binary",
                    "description": "The plate's image"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "value",
                  "ingredients",
                  "categories",
                  "picture"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plate created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plate"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["Plates"],
        "summary": "Get all plates",
        "responses": {
          "200": {
            "description": "Operation successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plate"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plates/{id}": {
      "get": {
        "tags": ["Plates"],
        "summary": "Get plate details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the plate to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plate details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plate"
                }
              }
            }
          },
          "404": {
            "description": "Plate not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Plates"],
        "summary": "Update a plate",
        "description": "Plate updated",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the plate to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The updated title of the plate"
                  },
                  "description": {
                    "type": "string",
                    "description": "The updated description of the plate"
                  },
                  "value": {
                    "type": "number",
                    "description": "The updated value of the plate"
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The updated ingredients of the plate",
                    "collectionFormat": "multi"
                  },
                  "categories": {
                    "type": "string",
                    "description": "The updated categories of the plate"
                  },
                  "picture": {
                    "type": "string",
                    "format": "binary",
                    "description": "The updated plate image"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "value",
                  "ingredients",
                  "categories",
                  "picture"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plate updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plate"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Plate not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/favorites/favorite_plates": {
      "post": {
        "tags": ["Favorites"],
        "summary": "Add a plate to the user's favorites",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FavoritePlate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Plate marked as favorite",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error marking the plate as favorite",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Favorites"],
        "summary": "Get the list of user's favorite plates",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "description": "User's ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of user's favorite plates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plate"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid access token"
          }
        }
      },
      "delete": {
        "summary": "Remove a plate from favorites",
        "tags": ["Favorites"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "ID of the plate to be removed from favorites",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plate_id": {
                    "type": "integer",
                    "description": "ID of the plate to be removed"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plate removed from favorites"
          },
          "400": {
            "description": "Plate is not marked as favorite"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order",
        "description": "Create a new order with the provided information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Order created successfully"
          },
          "400": {
            "description": "Invalid request. Invalid input data"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["Orders"],
        "summary": "List all orders",
        "description": "Get a list of all orders",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders retrieved successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Display details of a specific order",
        "description": "Get the details of a specific order by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order details retrieved successfully"
          },
          "400": {
            "description": "Invalid request. Invalid input data"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Orders"],
        "summary": "Update an order",
        "description": "Update the details of a specific order by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Order updated successfully"
          },
          "400": {
            "description": "Invalid request. Invalid input data"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Orders"],
        "summary": "Delete an order",
        "description": "Delete a specific order by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Order ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted successfully"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Anakin Skywalker",
            "description": "The name of the user"
          },
          "email": {
            "type": "string",
            "example": "AnakynSkywalker@republicagalactica.com",
            "description": "The email address of the user"
          },
          "password": {
            "type": "string",
            "example": "Code66",
            "description": "The password of the user"
          },
          "isAdmin": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if the user is an administrator"
          }
        },
        "required": ["name", "email", "password"]
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Darth Vader",
            "description": "The updated name of the user"
          },
          "email": {
            "type": "string",
            "example": "DarthVader@empiregalaxy.com",
            "description": "The updated email address of the user"
          },
          "password": {
            "type": "string",
            "example": "DarkSide123",
            "description": "The updated password of the user"
          }
        },
        "required": ["name", "email", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "The generated access token for authentication"
          }
        },
        "required": ["token"]
      },
      "Plate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "The ID of the plate"
          },
          "title": {
            "type": "string",
            "example": "Jedi Burger",
            "description": "The title of the plate"
          },
          "description": {
            "type": "string",
            "example": "A delicious burger served with Force fries",
            "description": "The description of the plate"
          },
          "value": {
            "type": "number",
            "example": 12.99,
            "description": "The value of the plate"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Bun", "Beef patty", "Cheese", "Lettuce", "Tomato"],
            "description": "The ingredients of the plate"
          },
          "categories": {
            "type": "string",
            "example": "Burgers",
            "description": "The categories of the plate"
          },
          "picture": {
            "type": "string",
            "format": "binary",
            "example": "plate_image.jpg",
            "description": "The plate's image"
          }
        },
        "required": [
          "title",
          "description",
          "value",
          "ingredients",
          "categories",
          "picture"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Invalid request. Please check your input data.",
            "description": "The error message"
          }
        },
        "required": ["message"]
      },
      "FavoritePlate": {
        "type": "object",
        "properties": {
          "plate_id": {
            "type": "integer",
            "example": 1,
            "description": "The ID of the plate to mark as favorite"
          }
        },
        "required": ["plate_id"]
      },
      "CreateOrder": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "example": 1,
            "description": "The ID of the user placing the order"
          },
          "plates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "plate_id": {
                  "type": "integer",
                  "example": 1,
                  "description": "The ID of the plate in the order"
                },
                "quantity": {
                  "type": "integer",
                  "example": 2,
                  "description": "The quantity of the plate in the order"
                }
              },
              "required": ["plate_id", "quantity"]
            }
          }
        },
        "required": ["user_id", "plates"]
      },
      "UpdateOrder": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "example": 1,
            "description": "The updated ID of the user placing the order"
          },
          "plates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "plate_id": {
                  "type": "integer",
                  "example": 1,
                  "description": "The updated ID of the plate in the order"
                },
                "quantity": {
                  "type": "integer",
                  "example": 3,
                  "description": "The updated quantity of the plate in the order"
                }
              },
              "required": ["plate_id", "quantity"]
            }
          }
        },
        "required": ["user_id", "plates"]
      }
    }
  }
}
